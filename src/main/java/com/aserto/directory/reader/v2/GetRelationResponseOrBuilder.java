// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aserto/directory/reader/v2/reader.proto

package com.aserto.directory.reader.v2;

public interface GetRelationResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aserto.directory.reader.v2.GetRelationResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * array of relation instances
   * </pre>
   *
   * <code>repeated .aserto.directory.common.v2.Relation results = 1 [json_name = "results"];</code>
   */
  java.util.List<com.aserto.directory.common.v2.Relation> 
      getResultsList();
  /**
   * <pre>
   * array of relation instances
   * </pre>
   *
   * <code>repeated .aserto.directory.common.v2.Relation results = 1 [json_name = "results"];</code>
   */
  com.aserto.directory.common.v2.Relation getResults(int index);
  /**
   * <pre>
   * array of relation instances
   * </pre>
   *
   * <code>repeated .aserto.directory.common.v2.Relation results = 1 [json_name = "results"];</code>
   */
  int getResultsCount();
  /**
   * <pre>
   * array of relation instances
   * </pre>
   *
   * <code>repeated .aserto.directory.common.v2.Relation results = 1 [json_name = "results"];</code>
   */
  java.util.List<? extends com.aserto.directory.common.v2.RelationOrBuilder> 
      getResultsOrBuilderList();
  /**
   * <pre>
   * array of relation instances
   * </pre>
   *
   * <code>repeated .aserto.directory.common.v2.Relation results = 1 [json_name = "results"];</code>
   */
  com.aserto.directory.common.v2.RelationOrBuilder getResultsOrBuilder(
      int index);

  /**
   * <pre>
   * map of materialized relation objects
   * </pre>
   *
   * <code>map&lt;string, .aserto.directory.common.v2.Object&gt; objects = 2 [json_name = "objects"];</code>
   */
  int getObjectsCount();
  /**
   * <pre>
   * map of materialized relation objects
   * </pre>
   *
   * <code>map&lt;string, .aserto.directory.common.v2.Object&gt; objects = 2 [json_name = "objects"];</code>
   */
  boolean containsObjects(
      java.lang.String key);
  /**
   * Use {@link #getObjectsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.aserto.directory.common.v2.Object>
  getObjects();
  /**
   * <pre>
   * map of materialized relation objects
   * </pre>
   *
   * <code>map&lt;string, .aserto.directory.common.v2.Object&gt; objects = 2 [json_name = "objects"];</code>
   */
  java.util.Map<java.lang.String, com.aserto.directory.common.v2.Object>
  getObjectsMap();
  /**
   * <pre>
   * map of materialized relation objects
   * </pre>
   *
   * <code>map&lt;string, .aserto.directory.common.v2.Object&gt; objects = 2 [json_name = "objects"];</code>
   */
  /* nullable */
com.aserto.directory.common.v2.Object getObjectsOrDefault(
      java.lang.String key,
      /* nullable */
com.aserto.directory.common.v2.Object defaultValue);
  /**
   * <pre>
   * map of materialized relation objects
   * </pre>
   *
   * <code>map&lt;string, .aserto.directory.common.v2.Object&gt; objects = 2 [json_name = "objects"];</code>
   */
  com.aserto.directory.common.v2.Object getObjectsOrThrow(
      java.lang.String key);
}
