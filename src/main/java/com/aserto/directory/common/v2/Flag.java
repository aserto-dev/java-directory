// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aserto/directory/common/v2/common.proto

package com.aserto.directory.common.v2;

/**
 * Protobuf enum {@code aserto.directory.common.v2.Flag}
 */
public enum Flag
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * default, no special object behavior
   * </pre>
   *
   * <code>FLAG_UNKNOWN = 0;</code>
   */
  FLAG_UNKNOWN(0),
  /**
   * <pre>
   * hidden object
   * </pre>
   *
   * <code>FLAG_HIDDEN = 1;</code>
   */
  FLAG_HIDDEN(1),
  /**
   * <pre>
   * read-only object
   * </pre>
   *
   * <code>FLAG_READONLY = 2;</code>
   */
  FLAG_READONLY(2),
  /**
   * <pre>
   * system object
   * </pre>
   *
   * <code>FLAG_SYSTEM = 4;</code>
   */
  FLAG_SYSTEM(4),
  /**
   * <pre>
   * shadow object by type+key associated to parent object
   * </pre>
   *
   * <code>FLAG_SHADOW = 8;</code>
   */
  FLAG_SHADOW(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * default, no special object behavior
   * </pre>
   *
   * <code>FLAG_UNKNOWN = 0;</code>
   */
  public static final int FLAG_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * hidden object
   * </pre>
   *
   * <code>FLAG_HIDDEN = 1;</code>
   */
  public static final int FLAG_HIDDEN_VALUE = 1;
  /**
   * <pre>
   * read-only object
   * </pre>
   *
   * <code>FLAG_READONLY = 2;</code>
   */
  public static final int FLAG_READONLY_VALUE = 2;
  /**
   * <pre>
   * system object
   * </pre>
   *
   * <code>FLAG_SYSTEM = 4;</code>
   */
  public static final int FLAG_SYSTEM_VALUE = 4;
  /**
   * <pre>
   * shadow object by type+key associated to parent object
   * </pre>
   *
   * <code>FLAG_SHADOW = 8;</code>
   */
  public static final int FLAG_SHADOW_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Flag valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Flag forNumber(int value) {
    switch (value) {
      case 0: return FLAG_UNKNOWN;
      case 1: return FLAG_HIDDEN;
      case 2: return FLAG_READONLY;
      case 4: return FLAG_SYSTEM;
      case 8: return FLAG_SHADOW;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Flag>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Flag> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Flag>() {
          public Flag findValueByNumber(int number) {
            return Flag.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.aserto.directory.common.v2.CommonProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final Flag[] VALUES = values();

  public static Flag valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Flag(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:aserto.directory.common.v2.Flag)
}

